cmake_minimum_required(VERSION 3.13)

if(RISCV_TOOLCHAIN_INCLUDED)
  return()
endif()

set(RISCV_TOOLCHAIN_INCLUDED true)

set(RISCV_TOOLCHAIN_PREFIX "riscv64-elf-" CACHE STRING "RISC-V toolchain prefix")
set(RISCV_TOOLCHAIN_ROOT "/usr/riscv64-elf/" CACHE PATH "RISC-V toolchain path")

set(RISCV_ARCH "rv64ima_zicsr_zifencei" CACHE STRING "RISC-V instruction set")
set(RISCV_ABI "lp64" CACHE STRING "RISC-V abi")
set(RISCV_CMODEL "medany" CACHE STRING "RISC-V cmodel")

SET(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR riscv)
set(CMAKE_CROSSCOMPILING 1)

set(CMAKE_FIND_ROOT_PATH ${RISCV_TOOLCHAIN_ROOT})
list(APPEND CMAKE_PREFIX_PATH "${RISCV_TOOLCHAIN_ROOT}")

find_program(CMAKE_C_COMPILER "${RISCV_TOOLCHAIN_PREFIX}gcc")
find_program(CMAKE_CXX_COMPILER "${RISCV_TOOLCHAIN_PREFIX}g++")

set(RISCV_COMPILER_FLAGS)
set(RISCV_LINKER_FLAGS)
set(RISCV_LINKER_FLAGS_EXE)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(RISCV_COMPILER_FLAGS "${RISCV_COMPILER_FLAGS} \
    -march=${RISCV_ARCH} -mabi=${RISCV_ABI} -mcmodel=${RISCV_CMODEL} \
    -ffreestanding"
    )

set(RISCV_LINKER_FLAGS "-nostdlib")

set(CMAKE_C_FLAGS             "${RISCV_COMPILER_FLAGS} ${CMAKE_C_FLAGS}")
set(CMAKE_CXX_FLAGS           "${RISCV_COMPILER_FLAGS} ${CMAKE_CXX_FLAGS}")
set(CMAKE_ASM_FLAGS           "${RISCV_COMPILER_FLAGS} ${CMAKE_ASM_FLAGS}")

set(CMAKE_SHARED_LINKER_FLAGS "${RISCV_LINKER_FLAGS} ${CMAKE_SHARED_LINKER_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS "${RISCV_LINKER_FLAGS} ${CMAKE_MODULE_LINKER_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS    "${RISCV_LINKER_FLAGS} ${RISCV_LINKER_FLAGS_EXE} ${CMAKE_EXE_LINKER_FLAGS}")
